export default {
    settings: {
        renderNullAs: 'Render null as',
        renderNullAsDesc: 'What null/non-existent should show up as in tables, by default. This supports Markdown notation.',
        taskCompletionTracking: 'Task completion tracking',
        taskCompletionTrackingDesc: 'If enabled, Dataview will automatically append tasks with their completion date when they are checked in Dataview views.',
        taskCompletionTrackingExample: 'Example with default field name and date format: - [x] my task [completion:: 2022-01-01]',
        taskCompletionUseEmojiShorthand: 'Use emoji shorthand for completion',
        taskCompletionUseEmojiShorthandDesc: 'If enabled, will use emoji shorthand instead of inline field formatting to fill out implicit task field "completion".',
        taskCompletionUseEmojiShorthandExample: 'Example: - [x] my task âœ… 2022-01-01',
        taskCompletionUseEmojiShorthandNote: 'Disable this to customize the completion date format or field name, or to use Dataview inline field formatting.',
        taskCompletionText: 'Task completion text',
        taskCompletionTextDesc: 'Text used as inline field key for task completion date when toggling a task\'s checkbox in a Dataview view.',
        taskCompletionDateFormat: 'Task completion date format',
        taskCompletionDateFormatDesc: 'Date-time format for task completion date when toggling a task\'s checkbox in a Dataview view (see Luxon date format options).',
        recursiveSubTaskCompletion: 'Recursive subtask completion',
        recursiveSubTaskCompletionDesc: 'If enabled, completing a task in a Dataview will automatically complete its subtasks too.',
        warnOnEmptyResult: 'Warn on empty result',
        warnOnEmptyResultDesc: 'If set, queries which return 0 results will render a warning message.',
        refreshEnabled: 'Enable automatic refresh',
        refreshEnabledDesc: 'If enabled, views will automatically refresh when files in your vault change; this can negatively affect some functionality like embeds in views, so turn it off if such functionality is not working.',
        refreshInterval: 'Refresh interval',
        refreshIntervalDesc: 'How long to wait (in milliseconds) for files to stop changing before updating views.',
        defaultDateFormat: 'Default date format',
        defaultDateFormatDesc: 'The default date format (see Luxon date format options).',
        defaultDateTimeFormat: 'Default date/time format',
        defaultDateTimeFormatDesc: 'The default date and time format (see Luxon date format options).',
        maxRecursiveRenderDepth: 'Maximum recursive render depth',
        allowHtml: 'Allow HTML',
        tableIdColumnName: 'Table ID column name',
        tableIdColumnNameDesc: 'The name of the default ID column in tables; this is the auto-generated first column that links to the source file.',
        tableGroupColumnName: 'Table group column name',
        tableGroupColumnNameDesc: 'The name of the default ID column in tables, when the table is on grouped data; this is the auto-generated first column that links to the source file/group.',
        showResultCount: 'Show result count',
        showResultCountDesc: 'If toggled off, the small number in the result header of TASK and TABLE queries will be hidden.',
        inlineQueryPrefix: 'Inline query prefix',
        inlineQueryPrefixDesc: 'The prefix to inline queries (to mark them as Dataview queries). Defaults to "=".',
        inlineJsQueryPrefix: 'Inline JS query prefix',
        inlineJsQueryPrefixDesc: 'The prefix to JavaScript inline queries (to mark them as DataviewJS queries). Defaults to "$=".',
        inlineQueriesInCodeblocks: 'Enable inline queries in codeblocks',
        inlineQueriesInCodeblocksDesc: 'If enabled, inline queries will also be evaluated inside full code blocks.',
        enableDataviewJs: 'Enable DataviewJS',
        enableDataviewJsDesc: 'Enable or disable executing DataviewJS queries.',
        enableInlineDataview: 'Enable inline Dataview',
        enableInlineDataviewDesc: 'Enable or disable executing regular inline Dataview queries.',
        enableInlineDataviewJs: 'Enable inline DataviewJS',
        enableInlineDataviewJsDesc: 'Enable or disable executing inline DataviewJS queries. Requires that DataviewJS queries are enabled.',
        prettyRenderInlineFields: 'Pretty render inline fields',
        prettyRenderInlineFieldsDesc: 'Enables or disables visual highlighting / pretty rendering for inline fields in reading view.',
        prettyRenderInlineFieldsInLivePreview: 'Pretty render inline fields in Live Preview',
        prettyRenderInlineFieldsInLivePreviewDesc: 'Enables or disables visual highlighting / pretty rendering for inline fields in Live Preview.',
        dataviewJsKeyword: 'DataviewJS keyword',
        dataviewJsKeywordDesc: 'Keyword for DataviewJS blocks. Defaults to "dataviewjs". Reload required for changes to take effect.',
        currentFormat: 'Currently: ',
        onlyAvailableWhenEnabled: 'Only available when "automatic task completion tracking" is enabled.',
        onlyAvailableWhenEnabledAndShorthandDisabled: 'Only available when "automatic task completion tracking" is enabled and "use emoji shorthand for completion" is disabled.'
    },
    ui: {
        noResults: 'No results found',
        loading: 'Loading...',
        error: 'Error',
        refresh: 'Refresh',
        taskComplete: 'Complete',
        taskIncomplete: 'Incomplete'
    },
    errors: {
        invalidQuery: 'Invalid query',
        invalidSyntax: 'Invalid syntax',
        dataviewDisabled: 'Dataview is disabled',
        jsDisabled: 'DataviewJS is disabled'
    }
}; 